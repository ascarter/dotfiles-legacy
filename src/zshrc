#  -*- mode: unix-shell-script; -*-

# ========================================
# Functions/Completions
# ========================================

fpath=(~/.zsh/functions ~/.zsh_local/functions /opt/homebrew/share/zsh/site-functions $fpath)

source ~/.git-prompt.sh

autoload -U compinit
compinit -u
autoload -U promptinit
promptinit
autoload -U colors
colors
autoload -U ~/.zsh/functions/[^_]*(:t)
if [ -d ~/.zsh_local/functions ]; then
    autoload -U ~/.zsh_local/functions/*(:t)
fi
autoload add-zsh-hook

zstyle ':completion:*:*:git:*' script ~/.zsh/completions/git

# Source any user zsh completion scripts
if [ -d ~/.zsh/completions/completions.d ]; then
    for f in ~/.zsh/completions/completions.d/*
    do
        . ${f}
    done
fi

# ========================================
# Path settings
# ========================================

# Homebrew - Fix up the paths to prioritize homebrew
if which brew &>/dev/null; then
    BREW_PREFIX=`brew --prefix`
	export HOMEBREW_NO_EMOJI=1
    export PATH=${BREW_PREFIX}/bin:${PATH}

	# Extend gcc library/include paths to homebrew
	if [ -d ${BREW_PREFIX}/lib ]; then
    	export LIBRARY_PATH=${BREW_PREFIX}/lib
    fi
    if [ -d ${BREW_PREFIX}/include ]; then
    	export C_INCLUDE_PATH=${BREW_PREFIX}/include
	    export CPLUS_INCLUDE_PATH=${BREW_PREFIX}/include
	    export OBJC_INCLUDE_PATH=${BREW_PREFIX}/include
    fi
fi

# Add developer bin
if [ -d ~/Developer/bin ]; then
	export PATH=~/Developer/bin:${PATH}
fi

# Add home bin dir if it is there
if [ -d ~/.bin ]; then
	export PATH=~/.bin:${PATH}
fi

# ========================================
# Languages/frameworks
# ========================================

# Ruby (rbenv)
if [ -d ~/.rbenv/bin ]; then
    export PATH=~/.rbenv/bin:${PATH}
	eval "$(rbenv init -)"
fi

# Add local bin directory for Ruby/Bundler
# export PATH=./bin:${PATH}

# Go
if [ -d ~/.go ]; then
	export GOPATH=~/.go
	export PATH=$PATH:${GOPATH//://bin:}/bin
fi

if [ -d ~/.gows ]; then
    source ~/.gows/gows
fi

# Python
# /Library/Frameworks/Python.framework/Versions/2.7/bin
# /Library/Frameworks/Python.framework/Versions/3.3/bin
export WORKON_HOME=$HOME/.virtualenvs
if [[ -e /usr/local/bin/virtualenvwrapper.sh ]] ; then
    source /usr/local/bin/virtualenvwrapper.sh
fi

# Node
export NODE_PATH=/usr/local/lib/node_modules

# npm
if which npm &>/dev/null; then
    . <(npm completion)
fi

# grunt
if which grunt &>/dev/null; then
    . <(grunt --completion=zsh)
fi

# Java
if [[ -e /usr/libexec/java_home ]]; then
	# Verify that java is installed
	/usr/libexec/java_home > /dev/null 2>&1
	if [[ $? -eq 0 ]]; then
		# Java installed - use the default JDK
		export JAVA_HOME=`/usr/libexec/java_home`
	fi
else
    export JAVA_HOME=$(readlink -f `which java` | sed "s:bin/java::")
fi

# Gradle
if [[ -e ~/Developer/gradle ]]; then
	export GRADLE_HOME=~/Developer/gradle
	export PATH=${PATH}:${GRADLE_HOME}/bin
fi

# Android
if [ -d ~/Library/Android/sdk ]; then
    export ANDROID_HOME=~/Library/Android/sdk
	export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools
fi

# AWS
if which brew &>/dev/null; then
    BREW_PREFIX=`brew --prefix`
    if [ -e ${BREW_PREFIX}/share/zsh/site-functions/_aws ]; then
		source ${BREW_PREFIX}/share/zsh/site-functions/_aws
    fi
fi

if [ -d ~/Developer/Library/AWS ]; then
	export AWS_HOME=~/Developer/Library/AWS

	# Setup EB
	if [ -d ${AWS_HOME}/AWS-ElasticBeanstalk-CLI-2.4.0 ]; then
		export AWS_EB_HOME=${AWS_HOME}/AWS-ElasticBeanstalk-CLI-2.4.0

		case $(uname) in
		Darwin )
			platform="macosx"
			;;
		Linux )
			platform="linux"
			;;
		* )
			platform="unknown"
		esac

		if [ $platform != "unknown" ]; then
			case $(python --version 2>&1) in
				*2.7* )
					pyver="python2.7"
					;;
				*3* )
					pyver="python3"
					;;
				* )
					pyver="unknown"
			esac

			if [ $pyver != "unknown" ]; then
				export PATH=$PATH:${AWS_EB_HOME}/eb/${platform}/${pyver}
			fi
		fi
	fi
fi

# Google Cloud
if [ -d ~/Developer/google-cloud-sdk ]; then
	# The next line updates PATH for the Google Cloud SDK.
	source ~/Developer/google-cloud-sdk/path.zsh.inc

	# The next line enables shell command completion for gcloud.
	# source ~/Developer/google-cloud-sdk/completion.zsh.inc
fi

# ========================================
# Applications/services
# ========================================

# GitHub
if which hub &>/dev/null; then
	export GITHUB_USER=ascarter
	eval "$(hub alias -s)"
fi

# PostgreSQL
if [ -d /Applications/Postgres.app ]; then
	export PATH=$PATH:/Applications/Postgres.app/Contents/Versions/latest/bin
fi

# Heroku Toolbelt
if [ -d /usr/local/heroku ]; then
	export PATH="/usr/local/heroku/bin:$PATH"
fi

# ========================================
# Shell preferences
# ========================================

# Editor
if [ -e /usr/local/bin/bbedit ]; then
    # bbedit
    export GIT_EDITOR="bbedit -w"
    export SVN_EDITOR="bbedit -w"
    export EDITOR="bbedit -w"
    export VISUAL="bbedit"
    export LESSEDIT='bbedit -l %lm %f'
    export TEXEDIT='bbedit -w -l %d "%s"'
else
    # vim
    export EDITOR="vim"
    export GIT_EDITOR="${EDITOR}"
    export SVN_EDITOR="${EDITOR}"
    export VISUAL="gvim"
    export LESSEDIT='vim ?lm+%lm. %f'
    export TEXEDIT='vim +%d %s'
fi

# ========================================
# Terminal settings
# ========================================

if which dircolors &>/dev/null; then
    if [ -e ~/.dircolors ]; then
        eval `dircolors ~/.dircolors`
    fi
else
    terminal_theme dark
fi

# Key mappings

# Forward delete
bindkey "^[[3~" delete-char

# ========================================
# Prompt
# ========================================

setopt transient_rprompt

# Set Git PS conditions
export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWSTASHSTATE=1
export GIT_PS1_SHOWUNTRACKEDFILES=1
export GIT_PS1_SHOWUPSTREAM="auto"
export GIT_PS1_SHOWCOLORHINTS=1

# Default
# PS1="%m%# "
declare +x PS1

prompt ascarter

if [ "$TERM_PROGRAM" = "Apple_Terminal" ] && [ -z "$INSIDE_EMACS" ]; then
    add-zsh-hook chpwd update_terminal_cwd
    update_terminal_cwd
fi

# ========================================
# Aliases
# ========================================
if [ -e ~/.aliases ]; then
	. ~/.aliases
fi

# ========================================
# Per-machine extras
# ========================================
if [ -e ~/.zsh_local/zshrc ]; then
	. ~/.zsh_local/zshrc
fi
