[color]
    ui = auto
[color "status"]
    added = green bold
    changed = red bold
    untracked = cyan bold
    branch = yellow bold
    localBranch = yellow bold
    remoteBranch = cyan bold
[core]
    autocrlf = input
    editor = $EDITOR
    excludesFile = ~/.gitignore
[difftool]
    prompt = false
[init]
    defaultBranch = main
[instaweb]
    httpd = webrick
[difftool "vscode"]
    cmd = code --wait --new-window --diff $LOCAL $REMOTE
[mergetool "vscode"]
    cmd = code --wait --new-window $MERGED
[diff]
    tool = vimdiff
    guitool = vscode
[merge]
    tool = vimdiff
    guitool = vscode
[alias]
    aliases = !git config -l | grep alias | cut -c 7-
    amend = commit --amend
    begin = checkout -b
    blocal = rev-parse --abbrev-ref HEAD
    br = branch
    bremote = rev-parse --abbrev-ref --symbolic-full-name @{u}
    changelog = log --oneline --decorate --no-merges
    changes = diff --name-status -r
    ci = commit
    ciu = commitup
    cleanup = !git checkout master && git branch --merged | grep -v \" master\" | xargs git branch -d
    co = checkout
    commitup = !f() { local msg=${1-'WIP'}; git commit -a -m \"${msg}\"; git up; git push origin; }; f
    cont = !f() { git up; echo "Create new branch ${1}"; git begin ${1} origin/${1}; }; f
    ctags = !${PWD}/.git/hooks/ctags
    datetag = !git tag `date \"+%Y%m%d%H%M\"`
    dc = diff --cached
    df = diff
    difflast = diff HEAD^ HEAD
    diffstat = diff --stat -r
    dirty = status --untracked-files=no --porcelain
    discard = checkout --
    done = !f() { local branch=${1-$(git blocal)}; git checkout master; git up; git cleanup; git branch -d ${branch}; }; f
    dump = cat-file -p
    fingerprint = !ssh-keygen -l -E md5 -f id_rsa
    gdiff = difftool --gui --no-prompt
    gitkconflict = !gitk --left-right HEAD...MERGE_HEAD
    graphviz = "!f() { echo 'digraph git {' ; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g' ; echo '}'; }; f"
    hist = log --pretty=format:\"%C(yellow)%h %C(green)%ad %C(cyan)%an %Cred%d %Creset%s%d\" --graph --date=local --stat
    hub = !sh -c 'github'
    k = !gitk
    last = log --stat --date=local -1
    lc = log ORIG_HEAD.. --stat --no-merges
    lg = llog --patch
    ll = log --pretty=format:\"%C(yellow)%h %C(green)%ad %C(cyan)%an %Cred%d %Creset%s\" --decorate --date=format-local:\"%b %e %Y %R\" --graph --all
    llast = last --patch
    llog = log --stat --date=local
    logd = log --date=local -- .
    ls = log --oneline --graph --all
    new = !sh -c 'git log $1@{1}..$1@{0} "$@"'
    prep = rebase -i @{upstream}
    prune-all = !git remote | xargs -n 1 git remote prune
    root = rev-parse --show-toplevel
    setemail = !git config user.email
    sha = rev-parse --verify HEAD
    ship = merge --no-ff
    st = status --branch --short
    type = cat-file -t
    undo = reset --soft HEAD^
    unstage = reset HEAD --
    untrack = rm --cache --
    up = !f() { if [ \"$(git dirty)\" != \"\" ]; then git upd; else git upc; fi; }; f
    upc = pull --rebase --prune
    upd = !git stash && git upc && git stash pop
    upstream = !git branch -vv --list $(git blocal)
    vtag = describe --tags --always --dirty
    whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
    who = shortlog -s --
    whois = !sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -
