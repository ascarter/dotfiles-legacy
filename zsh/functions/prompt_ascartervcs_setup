# Developer zsh prompt with vcs theme
# Andrew Carter <ascarter@gmail.com>
# 
# Developer prompt with VCS info
#

prompt_ascartervcs_help () {
    cat <<'EOH'

Developer prompt with VCS info

EOH
}

prompt_ascartervcs_setup () {
    local reset white gray green red yellow
    reset="%{${reset_color}%}"
    white="%{$fg[white]%}"
    gray="%{$fg_bold[black]%}"
    green="%{$fg[green]%}"
    red="%{$fg[red]%}"
    yellow="%{$fg[yellow]%}"

    zstyle ':vcs_info:*' enable git svn cvs hg bzr
    zstyle ':vcs_info:*' get-revision true
    zstyle ':vcs_info:*' check-for-changes true
    
    zstyle ':vcs_info:*' actionformats "${reset}${white}[${gray}%s|${green}%%B%b%%b${gray}|${yellow}%i${gray}|%B%a%%b${reset}${white}]${red}%B%u%c%%b${reset}"
    zstyle ':vcs_info:*' formats "${reset}${white}[${gray}%s|${green}%B%b%%b${gray}|${yellow}%i${reset}${white}]${red}%B%u%c%%b${reset}"
    
    zstyle ':vcs_info:*' stagedstr "+"
    zstyle ':vcs_info:*' unstagedstr "*"
    
    # git
    zstyle ':vcs_info:git*' actionformats "${reset}${white}[${gray}%s|${green}%B%b%%b${green}%m${gray}|${yellow}%12.12i${gray}|${yellow}%a${reset}${white}]${red}%B%u%c%%b${reset}"
    zstyle ':vcs_info:git*' formats "${reset}${white}[${gray}%s|${green}%B%b%%b${green}%m${gray}|${yellow}%12.12i${reset}${white}]${red}%B%u%c%%b${reset}"
    
    # svn
    zstyle ':vcs_info:(hg|svn):*' branchformat '%b'
    
    # Mark untracked files
    zstyle ':vcs_info:git*+set-message:*' hooks git-untracked
    
    +vi-git-untracked(){
        if [[ $(git rev-parse --is-inside-work-tree 2> /dev/null) == 'true' ]] && \
        git status --porcelain | grep '??' &> /dev/null ; then
            # This will show the marker if there are any untracked files in repo.
            # If instead you want to show the marker only if there are untracked
            # files in $PWD, use:
            #[[ -n $(git ls-files --others --exclude-standard) ]] ; then
            hook_com[staged]+='?'
        fi
    }
    
    ### git: Show +N/-N when your local branch is ahead-of or behind remote HEAD.
    # Make sure you have added misc to your 'formats':  %m
    # Compare with remote
    
    # git: Show +N/-N when local branch is ahead/behind remote
    
    zstyle ':vcs_info:git*+set-message:*' hooks git-st
    function +vi-git-st() {
        local ahead behind
        local -a gitstatus
    
        ahead=$(git rev-list ${hook_com[branch]}@{upstream}..HEAD 2>/dev/null | wc -l)
        (( $ahead )) && gitstatus+=( "+${ahead:t:gs/ /}" )
    
        behind=$(git rev-list HEAD..${hook_com[branch]}@{upstream} 2>/dev/null | wc -l)
        (( $behind )) && gitstatus+=( "-${behind:t:gs/ /}" )
        
        hook_com[misc]+=${(j:/:)gitstatus}
    }

    precmd () { vcs_info }
    RPS1='${vcs_info_msg_0_}'
    PS1="${white}%n@%m${reset}:${white}%B%1~%b${reset}%# "
    PS4='+%N:%i:%_>'
    
    prompt_opts=( cr percent subst )
    
    #chpwd () _update_cwd
    #_update_cwd
    
}

_filter_vcsinfo() { '${(S)vcs_info_msg_0_//(\%b|\%B)/}' }

_update_cwd() {
    # print -Pn '\e]0;%n@%m: %3~\a'
    print -Pn '\e]0;%n@%m\a'
}

prompt_ascartervcs_setup "$@"
