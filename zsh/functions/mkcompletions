#  -*- mode: unix-shell-script; -*-

# Generate tab completions
# This updates generated completions that cannot be directly loaded in zshrc

emulate -L zsh

COMPLETIONS_DIR=${ZDOTDIR:-$HOME/.zsh}/completions
mkdir -p ${COMPLETIONS_DIR}

# Swift
if type swift &>/dev/null; then
	printf "Generating swift completions...\n"
	swift package completion-tool generate-zsh-script > ${COMPLETIONS_DIR}/_swift
fi

# Rust
if type rustup &>/dev/null; then
	printf "Generating rustup completions...\n"
	rustup completions zsh > ${COMPLETIONS_DIR}/_${rustup}
fi

# Docker
if [[ -d /Applications/Docker.app ]]; then
	for f in docker docker-compose docker-machine; do
		printf "Generating ${f} completions...\n"
		ln -fs /Applications/Docker.app/Contents/Resources/etc/${f}.zsh-completion ${COMPLETIONS_DIR}/_${f}
	done
fi

# Kubernetes
if type kubectl &>/dev/null; then
	printf "Generating kubectl completions...\n"
	kubectl completion zsh > ${COMPLETIONS_DIR}/_kubectl
fi

# if [[ -f /Applications/YubiKey\ Manager.app/Contents/MacOS/ykman ]]; then
# 	printf "Generating ykman completions...\n"
# 	_YKMAN_COMPLETE=source /Applications/YubiKey\ Manager.app/Contents/MacOS/ykman > ${COMPLETIONS_DIR}/_ykman
# fi


printf "Reload shell to load completions.\n"
